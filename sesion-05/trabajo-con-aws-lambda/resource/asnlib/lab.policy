{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowAllActions",
            "Effect": "Allow",
            "Action": [
                "events:*",
                "lambda:Add*",
                "lambda:Create*",
                "lambda:Delete*",
                "lambda:Get*",
                "lambda:Invoke*",
                "lambda:List*",
                "lambda:Publish*",
                "lambda:Put*",
                "lambda:Remove*",
                "lambda:Tag*",
                "lambda:Untag*",
                "lambda:Update*",
                "logs:*",
                "ssm:Get*",
                "ssm:PutParameter",
                "ssm:PutInventory",
                "ssm:PutComplianceItems",
                "ssm:PutConfigurePackageResult",
                "ssm:UpdateAssociationStatus",
                "ssm:UpdateInstanceAssociationStatus",
                "ssm:UpdateInstanceInformation",
                "ssm:CancelCommand",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution",
                "ssm:StartSession",
                "ssm:TerminateSession",
                "ssm:ResumeSession",
                "ssm:DescribeSessions",
                "ssm:GetConnectionStatus",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:Publish",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sns:ConfirmSubscription",
                "sns:Get*",
                "sns:Set*",
                "sns:List*",
                "tag:*",
                "ec2-instance-connect:SendSSHPublicKey",
                "ec2:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "RestrictInstanceActions",
            "Effect": "Allow",
            "Action": [
                "ec2:CreateFleet",
                "ec2:CreateLaunchTemplate",
                "ec2:CreateLaunchTemplateVersion",
                "ec2:CreateVolume",
                "ec2:EnableVolumeIO",
                "ec2:ImportInstance",
                "ec2:ImportSnapshot",
                "ec2:ImportVolume",
                "ec2:ModifyFleet",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyInstanceCreditSpecification",
                "ec2:ModifyLaunchTemplate",
                "ec2:ModifyVolume",
                "ec2:ModifyVolumeAttribute",
                "ec2:RebootInstances",
                "ec2:ResetInstanceAttribute",
                "ec2:RunInstances",
                "ec2:StartInstances"
            ],
            "Resource": "*",
            "Condition": {
                "StringEqualsIfExists": {
                    "ec2:Owner": "amazon"
                },
                "StringLikeIfExists": {
                    "ec2:InstanceType": [
                        "t*.nano",
                        "t*.micro"
                    ],
                    "ec2:Tenancy": "default"
                },
                "StringNotEqualsIfExists": {
                    "ec2:PlacementGroupStrategy": "cluster"
                },
                "StringNotLikeIfExists": {
                    "ec2:VolumeType": [
                        "io*",
                        "st*"
                    ]
                },
                "NumericLessThanEqualsIfExists": {
                    "ec2:VolumeSize": "100"
                }
            }
        },
        {
            "Sid": "RestrictActions",
            "Effect": "Deny",
            "Action": [
                "ec2:*Fpga*",
                "ec2:*Purchase*",
                "ec2:*ReservedInstances*",
                "ec2:*Scheduled*",
                "ec2:*Spot*",
                "ec2:AcceptVpcEndpointConnections",
                "ec2:AttachVpnGateway",
                "ec2:CreateCapacityReservation",
                "ec2:CreateVpnGateway",
                "ec2:EnableFastSnapshotRestores"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ServiceLinkedRoleAndPolicies",
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "arn:aws:iam::*:role/*salesAnalysisReport*",
            "Condition": {
                "StringLikeIfExists": {
                    "iam:PassedToService": [
                        "lambda.amazonaws.com"
                    ]
                }
            }
        }
    ]
}